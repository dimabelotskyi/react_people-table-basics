{"version":3,"sources":["components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PersonRow","person","className","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","failedPeopleLoading","setFailedPeopleLoading","useEffect","getPeopleFromServer","a","fetch","then","res","json","peopleServer","App","isActive","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"qRAmBeA,EAbmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnC,OACE,qBAAIC,UAAU,SAAd,UACE,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,MACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,OACZ,6BAAKL,EAAOM,aACZ,6BAAKN,EAAOO,iBCmBHC,G,MAzBqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrC,OACE,wBAAOR,UAAU,8CAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGQ,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOW,gBCcTC,EAjCa,WAC1B,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAsDD,oBAAS,GAA/D,mBAAOE,EAAP,KAA4BC,EAA5B,KAwBA,OAdAC,qBAAU,WACR,IAAMC,EAAmB,uCAAG,4BAAAC,EAAA,+EALrBC,MAHQ,qEAIZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAIS,OAElBC,EAFkB,OAIxBV,EAAUU,GAJc,gDAMxBR,GAAuB,GANC,yDAAH,qDAUzBE,MACC,IAGCH,EAEG,sDADD,cAAC,EAAD,CAAaN,OAAQA,KCQdgB,EAnCM,WACnB,OACE,sBAAKxB,UAAU,oBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CACEA,UAAW,qBAAGyB,SACV,2BAA6B,qBACjCC,GAAG,IAHL,uBAOA,cAAC,IAAD,CACE1B,UAAW,qBAAGyB,SACV,2BAA6B,qBACjCC,GAAG,UAHL,4BAQF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,6CACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,QAC1C,cAAC,IAAD,CAAOC,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CACED,KAAK,IACLC,QACE,wDC7BZC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9dd45b72.chunk.js","sourcesContent":["import Person from '../../types/Person';\n\ninterface Props {\n  person: Person,\n}\n\nconst PersonRow:React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"Person\">\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.motherName}</td>\n      <td>{person.fatherName}</td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import PersonRow from '../PersonRow/PersonRow';\nimport Person from '../../types/Person';\nimport './PeopleTable.scss';\n\ninterface Props {\n  people: Person[],\n}\n\nconst PeopleTable:React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"PeopleTable table is-hoverable is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PersonRow\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import { useEffect, useState } from 'react';\n// eslint-disable-next-line import/no-named-as-default\nimport PeopleTable from '../PeopleTable/PeopleTable';\nimport Person from '../../types/Person';\n\nconst PeoplePage:React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [failedPeopleLoading, setFailedPeopleLoading] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\n  function getPeople<T>(): Promise<T> {\n    return fetch(BASE_URL)\n      .then(res => res.json());\n  }\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      try {\n        const peopleServer = await getPeople<Person[]>();\n\n        setPeople(peopleServer);\n      } catch {\n        setFailedPeopleLoading(true);\n      }\n    };\n\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    (!failedPeopleLoading)\n      ? <PeopleTable people={people} />\n      : (<p>Failed to Load people</p>)\n  );\n};\n\nexport default PeoplePage;\n","import './App.scss';\nimport {\n  Routes, Route, NavLink, Navigate,\n} from 'react-router-dom';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\n\nconst App:React.FC = () => {\n  return (\n    <div className=\"App subtitle is-3\">\n      <nav className=\"nav\">\n        <NavLink\n          className={({ isActive }) => (isActive\n            ? 'button is-link is-active' : 'button is-warning')}\n          to=\"/\"\n        >\n          Home page\n        </NavLink>\n        <NavLink\n          className={({ isActive }) => (isActive\n            ? 'button is-link is-active' : 'button is-warning')}\n          to=\"/people\"\n        >\n          People page\n        </NavLink>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<h1>Home page</h1>} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n\n        <Route\n          path=\"*\"\n          element={\n            <p>Page not found</p>\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}